---
// src/pages/blog/index.astro
import { getCollection } from 'astro:content';
import BaseLayout from '../../layouts/BaseLayout.astro';
import BlogCard from '../../components/BlogCard.astro';
import Header from '../../components/Header.astro';

// Get all blog posts
const allPosts = await getCollection('blog', ({ data }) => {
  // Filter out draft posts in production
  return import.meta.env.PROD ? !data.draft : true;
});

// Sort posts by date (newest first)
const sortedPosts = allPosts.sort(
  (a, b) => b.data.pubDate.valueOf() - a.data.pubDate.valueOf()
);

// Get featured posts
const featuredPosts = sortedPosts.filter(post => post.data.featured);

// Get all unique tags
const allTags = [...new Set(sortedPosts.flatMap(post => post.data.tags || []))];

// Get the most recent post for the hero section
const latestPost = sortedPosts[0];
---

<html lang="en">
  <head>
    <meta charset="utf-8" />
    <meta name="viewport" content="width=device-width, initial-scale=1" />
    <meta name="description" content="Explore articles about web development, design, and technology" />
    <title>Blog | Your Site Name</title>
    <!-- Add any additional head elements as needed -->
  </head>
  <body>
    <Header />
    <main>
      <!-- Hero Section with Latest Post -->
      {latestPost && (
        <section class="blog-hero">
          <div class="hero-container">
            <div class="hero-content">
              <div class="meta-info">
                {latestPost.data.tags && latestPost.data.tags.length > 0 && (
                  <span class="hero-tag">{latestPost.data.tags[0]}</span>
                )}
                <span class="dot-separator">â€¢</span>
                <span class="hero-date">{new Date(latestPost.data.pubDate).toLocaleDateString('en-US', {
                  year: 'numeric',
                  month: 'long',
                  day: 'numeric'
                })}</span>
              </div>
              <h1 class="hero-title">{latestPost.data.title}</h1>
              <p class="hero-excerpt">{latestPost.data.description}</p>
              <a href={`/blog/${latestPost.slug}`} class="hero-btn">
                Read Article
                <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                  <path d="M5 12h14M12 5l7 7-7 7"></path>
                </svg>
              </a>
            </div>
            <div class="hero-image">
              <img 
                src={latestPost.data.heroImage || '/api/placeholder/800/600'} 
                alt={latestPost.data.title}
              />
            </div>
          </div>
        </section>
      )}
      
      <!-- Featured Posts Section -->
      {featuredPosts.length > 0 && (
        <section class="featured-posts">
          <div class="section-container">
            <div class="section-header">
              <h2>Featured Articles</h2>
              <div class="header-line"></div>
            </div>
            <div class="featured-grid">
              {featuredPosts.slice(0, 3).map(post => (
                <BlogCard 
                  title={post.data.title}
                  description={post.data.description}
                  pubDate={post.data.pubDate}
                  author={post.data.author}
                  image={post.data.heroImage}
                  url={`/blog/${post.slug}`}
                  tags={post.data.tags}
                  featured={true}
                />
              ))}
            </div>
          </div>
        </section>
      )}
      
      <!-- All Posts Section -->
      <section class="all-posts">
        <div class="section-container">
          <div class="section-header">
            <h2>Browse All Articles</h2>
            <div class="header-line"></div>
          </div>
          
          <div class="filter-container">
            <div class="tags-filter">
              <div class="filter-label">
                <svg xmlns="http://www.w3.org/2000/svg" width="18" height="18" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round" class="filter-icon">
                  <path d="M22 3H2l8 9.46V19l4 2v-8.54L22 3z"></path>
                </svg>
                <span>Filter by Topic:</span>
              </div>
              <div class="tags-list">
                <a href="/blog" class="tag active">All</a>
                {allTags.map(tag => (
                  <a href={`/tags/${tag}`} class="tag">#{tag}</a>
                ))}
              </div>
            </div>
          </div>
          
          <div class="posts-grid">
            {sortedPosts.map(post => (
              <BlogCard 
                title={post.data.title}
                description={post.data.description}
                pubDate={post.data.pubDate}
                author={post.data.author}
                image={post.data.heroImage}
                url={`/blog/${post.slug}`}
                tags={post.data.tags}
              />
            ))}
          </div>
        </div>
      </section>
      
      <!-- Newsletter Section -->
      <section class="newsletter-section">
        <div class="section-container">
          <div class="newsletter-box">
            <div class="newsletter-content">
              <h2>Stay Updated</h2>
              <p>Get notified when I publish new articles and insights. No spam, unsubscribe anytime.</p>
              <form class="newsletter-form" id="newsletter-form">
                <input type="email" name="email" id="email-input" placeholder="Enter your email" required />
                <button type="submit" id="submit-button">
                  Subscribe
                  <svg xmlns="http://www.w3.org/2000/svg" width="20" height="20" viewBox="0 0 24 24" fill="none" stroke="currentColor" stroke-width="2" stroke-linecap="round" stroke-linejoin="round">
                    <path d="M13 17l5-5-5-5M6 17l5-5-5-5"></path>
                  </svg>
                </button>
              </form>
            </div>
          </div>
        </div>
      </section>
    </main>
    
    <script is:inline>
      document.addEventListener("DOMContentLoaded", function() {
        const newsletterForm = document.getElementById('newsletter-form');
        
        if (newsletterForm) {
          newsletterForm.addEventListener('submit', function(e) {
            e.preventDefault();
            
            const emailInput = document.getElementById('email-input');
            
            if (!emailInput) {
              console.error('Email input element not found');
              return;
            }
            
            const email = emailInput.value ? emailInput.value.trim() : '';
            
            if (!email) {
              alert('Please enter a valid email address');
              return;
            }
            
            const scriptURL = 'https://script.google.com/macros/s/AKfycbzSrRluq2OkfLfNqOJzNC5SlloiIhjdy0uP9ren_9r6J60JCq_NZxsd8CE-98LAm4LS/exec';
            
            if (!scriptURL) {
              console.error('Google Script URL not configured');
              alert('The form is not properly configured. Please contact the site administrator.');
              return;
            }
            
            // Show loading state
            const submitButton = newsletterForm.querySelector('button[type="submit"]');
            const originalButtonText = submitButton ? submitButton.innerHTML : '';
            
            if (submitButton) {
              submitButton.disabled = true;
              submitButton.innerHTML = 'Submitting...';
            }
            
            fetch(scriptURL, {
              method: 'POST',
              mode: 'no-cors',
              headers: {
                'Content-Type': 'application/x-www-form-urlencoded',
              },
              body: `email=${encodeURIComponent(email)}`
            })
            .then(response => {
              console.log('Response received:', response);
              // Handle success
              alert('Thanks for subscribing!');
              if (newsletterForm) {
                newsletterForm.reset();
              }
            })
            .catch(error => {
              // Handle error
              console.error('Submission error:', error.message);
              alert('There was an error submitting the form. Please try again later.');
            })
            .finally(() => {
              // Reset button state
              if (submitButton) {
                submitButton.disabled = false;
                submitButton.innerHTML = originalButtonText;
              }
            });
          });
        } else {
          console.warn('Newsletter form not found in the document');
        }
      });
    </script>
    
    <style>
      /* Global Section Styles */
      .section-container {
        max-width: 1200px;
        margin: 0 auto;
        padding: 0 1.5rem;
      }
      
      .section-header {
        text-align: center;
        margin-bottom: 3rem;
        position: relative;
      }
      
      .section-header h2 {
        font-size: 2.2rem;
        color: #333;
        margin-bottom: 1rem;
        position: relative;
        display: inline-block;
      }
      
      .header-line {
        height: 3px;
        width: 80px;
        background: linear-gradient(90deg, #955f21, #d38f41);
        margin: 0 auto;
      }
      
      /* Hero Section Styles */
      .blog-hero {
        background-color: #f8f9fa;
        padding: 6rem 1.5rem;
        margin-bottom: 4rem;
        position: relative;
        overflow: hidden;
      }
      
      .blog-hero::before {
        content: "";
        position: absolute;
        top: 0;
        left: 0;
        right: 0;
        bottom: 0;
        background: linear-gradient(135deg, rgba(211, 143, 65, 0.1) 0%, rgba(149, 95, 33, 0.1) 100%);
        z-index: 1;
      }
      
      .hero-container {
        max-width: 1200px;
        margin: 0 auto;
        display: grid;
        grid-template-columns: 1fr 1fr;
        gap: 4rem;
        position: relative;
        z-index: 2;
      }
      
      .hero-content {
        display: flex;
        flex-direction: column;
        justify-content: center;
      }
      
      .meta-info {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        margin-bottom: 1.5rem;
      }
      
      .hero-tag {
        background-color: #d38f41;
        color: white;
        padding: 0.3rem 0.8rem;
        border-radius: 3px;
        font-size: 0.85rem;
        font-weight: 500;
      }
      
      .dot-separator {
        color: #999;
      }
      
      .hero-date {
        color: #666;
        font-size: 0.95rem;
      }
      
      .hero-title {
        font-size: 3rem;
        line-height: 1.2;
        margin-bottom: 1.5rem;
        color: #2c3e50;
      }
      
      .hero-excerpt {
        font-size: 1.2rem;
        line-height: 1.6;
        color: #636e72;
        margin-bottom: 2rem;
      }
      
      .hero-btn {
        display: inline-flex;
        align-items: center;
        gap: 0.5rem;
        background: linear-gradient(90deg, #d38f41, #955f21);
        color: white;
        padding: 0.8rem 1.5rem;
        border-radius: 4px;
        text-decoration: none;
        font-weight: 600;
        transition: all 0.3s ease;
        align-self: flex-start;
        box-shadow: 0 4px 10px rgba(211, 143, 65, 0.3);
      }
      
      .hero-btn:hover {
        transform: translateY(-2px);
        box-shadow: 0 6px 15px rgba(211, 143, 65, 0.4);
      }
      
      .hero-btn svg {
        transition: transform 0.3s ease;
      }
      
      .hero-btn:hover svg {
        transform: translateX(5px);
      }
      
      .hero-image {
        position: relative;
        height: 100%;
        display: flex;
        align-items: center;
        justify-content: center;
      }
      
      .hero-image img {
        width: 100%;
        height: auto;
        max-height: 400px;
        object-fit: cover;
        border-radius: 8px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.1);
      }
      
      /* Featured Posts Section */
      .featured-posts {
        padding: 2rem 0 5rem;
        background-color: #fff;
      }
      
      .featured-grid {
        display: grid;
        grid-template-columns: repeat(auto-fit, minmax(350px, 1fr));
        gap: 2.5rem;
      }
      
      /* All Posts Section */
      .all-posts {
        padding: 5rem 0;
        background-color: #f8f9fa;
      }
      
      .filter-container {
        margin-bottom:.5rem;
      }
      
      .tags-filter {
        display: flex;
        flex-direction: column;
        gap: 1rem;
        background-color: white;
        padding: 1.5rem;
        border-radius: 8px;
        box-shadow: 0 5px 15px rgba(0, 0, 0, 0.05);
      }
      
      .filter-label {
        display: flex;
        align-items: center;
        gap: 0.5rem;
        color: #555;
        font-weight: 500;
      }
      
      .filter-icon {
        color: #d38f41;
      }
      
      .tags-list {
        display: flex;
        flex-wrap: wrap;
        gap: 0.7rem;
      }
      
      .tag {
        background-color: #f0f0f0;
        color: #555;
        padding: 0.4rem 1rem;
        border-radius: 4px;
        font-size: 0.9rem;
        text-decoration: none;
        transition: all 0.2s ease;
      }
      
      .tag:hover, .tag.active {
        background-color: #d38f41;
        color: #fff;
      }
      
      .posts-grid {
        display: grid;
        grid-template-columns: repeat(auto-fill, minmax(350px, 1fr));
        gap: 2.5rem;
      }
      
      /* Newsletter Section */
      .newsletter-section {
        padding: 5rem 0;
        background: linear-gradient(135deg, #f8f9fa 0%, #f0f0f0 100%);
      }
      
      .newsletter-box {
        max-width: 700px;
        margin: 0 auto;
        background-color: white;
        padding: 3rem;
        border-radius: 8px;
        box-shadow: 0 10px 30px rgba(0, 0, 0, 0.05);
        text-align: center;
      }
      
      .newsletter-content h2 {
        font-size: 2rem;
        color: #2c3e50;
        margin-bottom: 1rem;
      }
      
      .newsletter-content p {
        color: #666;
        margin-bottom: 2rem;
        font-size: 1.1rem;
        line-height: 1.6;
      }
      
      .newsletter-form {
        display: flex;
        gap: 0.5rem;
        max-width: 500px;
        margin: 0 auto;
      }
      
      .newsletter-form input {
        flex: 1;
        padding: 0.8rem 1.2rem;
        border: 2px solid #e0e0e0;
        border-radius: 4px;
        font-size: 1rem;
        transition: border-color 0.3s ease;
      }
      
      .newsletter-form input:focus {
        border-color: #d38f41;
        outline: none;
      }
      
      .newsletter-form button {
        display: flex;
        align-items: center;
        justify-content: center;
        gap: 0.5rem;
        padding: 0 1.5rem;
        background: linear-gradient(90deg, #d38f41, #955f21);
        color: white;
        border: none;
        border-radius: 4px;
        font-weight: 600;
        cursor: pointer;
        transition: all 0.3s ease;
        white-space: nowrap;
      }
      
      .newsletter-form button:hover {
        transform: translateY(-2px);
        box-shadow: 0 4px 10px rgba(211, 143, 65, 0.3);
      }
      
      .newsletter-form button svg {
        transition: transform 0.3s ease;
      }
      
      .newsletter-form button:hover svg {
        transform: translateX(3px);
      }
      
      /* Responsive Styles */
      @media (max-width: 1024px) {
        .hero-title {
          font-size: 2.5rem;
        }
        
        .hero-excerpt {
          font-size: 1.1rem;
        }
        
        .featured-grid,
        .posts-grid {
          grid-template-columns: repeat(auto-fill, minmax(300px, 1fr));
        }
      }
      
      @media (max-width: 768px) {
        .blog-hero {
          padding: 4rem 1.5rem;
        }
        
        .hero-container {
          grid-template-columns: 1fr;
          gap: 2rem;
        }
        
        .hero-image {
          order: -1;
        }
        
        .hero-title {
          font-size: 2.2rem;
        }
        
        .section-header h2 {
          font-size: 1.8rem;
        }
        
        .newsletter-form {
          flex-direction: column;
        }
        
        .newsletter-box {
          padding: 2rem 1.5rem;
        }
      }
      
      @media (max-width: 480px) {
        .blog-hero {
          padding: 3rem 1rem;
        }
        
        .hero-title {
          font-size: 1.8rem;
        }
        
        .hero-excerpt {
          font-size: 1rem;
        }
        
        .featured-posts,
        .all-posts {
          padding: 3rem 0;
        }
        
        .newsletter-section {
          padding: 3rem 0;
        }
        
        .featured-grid,
        .posts-grid {
          grid-template-columns: 1fr;
        }
      }
    </style>
  </body>
</html>